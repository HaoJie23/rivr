group = "com.nuecho"
version = "0.9.3"

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'checkstyle'
    apply plugin: 'ivy-publish' // ivy publishing is for fallback if maven doesn't work.
    apply plugin: 'maven'
    apply plugin: 'signing'

    group = rootProject.group
    version = rootProject.version

    dependencies { checkstyle 'com.puppycrawl.tools:checkstyle:5.5' }
    repositories { mavenCentral() }

    checkstyle.configFile = rootProject.file('checkstyle/checkstyle.xml')
    sourceCompatibility = '1.6'

    // Fix for Unable to get class information
    checkstyleMain { classpath += configurations.compile }
    checkstyleTest { classpath += configurations.compile }

    eclipse {
        project {
            natures 'net.sf.eclipsecs.core.CheckstyleNature'
            buildCommand 'net.sf.eclipsecs.core.CheckstyleBuilder'
        }
        classpath {
            defaultOutputDir = file("${project.projectDir}/build/classes")
            // This should probably be submitted as a patch to the eclipse plugin.
            containers.clear()
            containers.add("org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.6")
        }
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.java
        classifier 'sources'
    }

    // Required for Maven central
    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    // Maven central release use the "old" uploadArchives mechanism since maven-publish doesn't support signing yet.
    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") } // Only sign during release.
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer(name: 'mavenCentral') {
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    // Add credentials only if they are present in the project.
                    // Avoid build failure if not trying to release and user doesn't have proper credentials.
                    if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')){
                        authentication(userName: sonatypeUsername, password: sonatypePassword)
                    }
                }

                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                // All these are required for maven central release.
                // See https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-6.CentralSyncRequirement
                pom.project {
                    name 'rivr'
                    description 'Rivr is a lightweight open-source dialogue engine enabling flexible VoiceXML web application development for the agile Java developer and enterprise.'
                    url 'http://rivr.nuecho.com/'

                    scm {
                        url 'scm:git@github.com:nuecho/rivr.git'
                        connection 'scm:git@github.com:nuecho/rivr.git'
                        developerConnection 'scm:git@github.com:nuecho/rivr.git'
                    }

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.html'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id 'nuecho'
                            name 'Nu Echo inc.'
                            email 'rivr-support@nuecho.com'
                        }
                    }
                }
            }
        }
    }
}

// Configure the java projects release.
configure([
    project("rivr-core"),
    project("rivr-voicexml")
]) {
    artifacts { archives jar }

    uploadArchives{
        repositories {
            mavenCentral{
                pom.project{ packaging 'jar' }
            }
        }
    }
}

task wrapper(type: Wrapper) { gradleVersion = '1.6' }

task globalJavadoc(type: Javadoc) {
     source subprojects.collect {project -> project.sourceSets.main.allJava } 
     destinationDir = new File(buildDir, 'javadoc')
     classpath = files(subprojects.collect {project -> project.sourceSets.main.compileClasspath}) 

     configure(options) {
        splitIndex true
        linkSource true
        windowTitle "Rivr API documentation"
        docTitle "Rivr documentation ($project.version)"
        bottom 'Copyright &copy; 2013 <a href="http://www.nuecho.com">Nu Echo Inc.</a>.'
        use = true 
        noTimestamp = true
        group("Rivr Core Packages", "com.nuecho.rivr.core*")
        group("Rivr VoiceXML Packages", "com.nuecho.rivr.voicexml*")
        links "http://download.oracle.com/javase/6/docs/api/"
        links "http://download.oracle.com/javaee/6/api/"
        setOverview("${projectDir}/doc/javadoc-extra/overview.html")
        stylesheetFile = new File( projectDir, 'doc/javadoc-extra/rivr-javadoc.css' ) 
        docTitle "<a href=\"http://rivr.nuecho.com/\" target=\"_blank\"><img src=\"http://rivr.nuecho.com/img/logo.png\" /></a><br/>API documentation of <a href=\"http://rivr.nuecho.com/\" target=\"_blank\">Rivr</a> $project.version"
    }
}


